HEXLOAD
:10F80000C30CF9C309F8C313F8EF6069CD1CF94FB5
:10F810000600C9CD00F9B7280501FFFFE7C90100BF
:10F8200000E7C95D541B7AB3280821A11CCD38F824
:10F8300018F321961CC338F80173FF0901E9FF0989
:10F8400038FD7DC60F3006FE083803F600231F384A
:10F8500001001F3002F6001FD0C93EFE3237FAD336
:10F8600030C9C506084FCB2138113A37FAE6FCD328
:10F87000303CD3303DD33010EDC1C93A37FAF602EF
:10F88000D3303CD3303DD33010DCC1C9C506080E9F
:10F8900000CB213A37FAF603D330DB30E6012804F7
:10F8A00079F6014F3A37FAE6FCF602D33010E279E6
:10F8B000C1C93A37FAE67F3237FAD330C93A37FA54
:10F8C000F6803237FAD330C93A37FAE6FB3237FAE4
:10F8D000D330C93A37FAF6043237FAD330C9DB30BD
:10F8E000E680C9DB30E68020FAC9DB30E680C87AE2
:10F8F000B337C8210100C5D5CD23F8D1C11B18EA03
:10F90000DB30E64028033E00C93E01C9C35AF81E59
:10F91000007BAE5F230B78B120F77BC9E5DDE111F9
:10F92000CBF9EDA0EDA0EDA0EDA0DDE5E101040037
:10F93000D5CD0FF9D112CDB2F8DD560DDD5E0CCD6F
:10F94000EAF8DAB9F921CBF9010500CDD0F9CDE318
:10F95000F8CDC8F8CD8CF808CDD3F808FE41C2C563
:10F96000F9DD4607DD4E0678B1281FCDE3F8DD66E8
:10F9700005DD6E04CDD0F9CDE3F8CDC8F8CD8CF817
:10F9800008CDD3F808FE41C2C5F9DD460BDD4E0AAD
:10F9900078B1280CCDE3F8DD6609DD6E08CD02FAFA
:10F9A000CDE3F8CDC8F8CD8CF808CDD3F808FE43E8
:10F9B000C2BFF9CDBDF83E00C9CDBDF83E04C9CDEA
:10F9C000BDF83E06C9CDBDF83E05C900000000A542
:10F9D00079E6C0B02819C5014000CDEFF9EBE1018F
:10F9E0004000ED42444DEBCDE3F879B020E2C9CDC3
:10F9F000C8F878B128087ECD62F8230B18F4CDD36F
:10FA0000F8C979B0C879E6C0B02819C5014000CD61
:10FA100024FAEBE1014000ED42444DEBCDE3F879EF
:10FA2000B020DFC9CDC8F878B12808CD8CF877238D
:08FA30000B18F4CDD3F8C90056
:00000001FF


ONLY FORTH

VOCABULARY FUJINET

( TODO: FUJINET DEFINITIONS )


HEX

: DOFIELD  ( the action of a field  )
DOES>       ( addr1 -- addr2 ; calculate address of field )
    @ + ;

: FIELD  ( # n ++ #'    define a field with offset # and size n )
    CREATE OVER , +    ( store offset, add the size to find new offset )
    DOFIELD ;          ( set the action of the newly created field )


0
1 CHARS FIELD DCB.DEV         ( uint8_t device; )
1 CHARS FIELD DCB.CMD         ( uint8_t command; )
1 CHARS FIELD DCB.AUX1        ( uint8_t aux1; )
1 CHARS FIELD DCB.AUX2        ( uint8_t aux2; )
2 CHARS FIELD DCB.BUFFER      ( uint8_t *buffer; )
2 CHARS FIELD DCB.#BUFFER     ( uint16_t buffer_bytes; // data length in bytes )
2 CHARS FIELD DCB.RESPONSE    ( uint8_t *response; )
2 CHARS FIELD DCB.#RESPONSE   ( uint16_t response_bytes; // data length in bytes )
2 CHARS FIELD DCB.TIMEOUT     ( uint16_t timeout;   // milliseconds )
CONSTANT #FUJINET_DCB


: /FUJINET                          ( initialises the fujinet )
   F800 CALL  ;

: FUJINET_DCB     ( dcb -- rc   execute a FujiNet DCB command )
   F803 CALL  ;

: FUJINET_POLL       ( -- f   poll the FujiNet PROCEED signal )
   F806 CALL  ;

: NEW_DCB        ( "name"   -- dcb   create a new FujiNet DCB )
   CREATE #FUJINET_DCB CHARS ALLOT   ;

: CLEAR_DCB      ( dcb   --   clear a FujiNet DCB )
   #FUJINET_DCB ERASE   ;

NEW_DCB dcb

70 CONSTANT DEVICEID_FUJINET

: FNRESET
   dcb CLEAR_DCB
   DEVICEID_FUJINET dcb DCB.DEV C!
   FF dcb DCB.CMD C!
   400 dcb DCB.TIMEOUT !
   dcb FUJINET_DCB   ;

/FUJINET
