( fig-FORTH 8080 Assembler with Z80 extensions       SCR 1 of 5)
HEX VOCABULARY ASSEMBLER IMMEDIATE
ALSO ASSEMBLER DEFINITIONS

1 5 +THRU
16 STACK: OPERANDS

VARIABLE CONDITIONAL?
VARIABLE CONDITIONAL
VARIABLE REGISTER16?
VARIABLE REGISTER
VARIABLE INDIRECT?


: RESETCC   0 CONDITIONAL? !  0 REGISTER16? !  0 INDIRECT? ! ;




( fig-FORTH 8080 Assembler with Z80 extensions       SCR 2 of 5)
4 CONSTANT H     5 CONSTANT L   7 CONSTANT A   6 CONSTANT PSW
2 CONSTANT D     3 CONSTANT E   0 CONSTANT B   1 CONSTANT C
6 CONSTANT (HL)  6 CONSTANT SP


: NZ 0 CONDITIONAL ! -1 CONDITIONAL? ! ;
: Z  1 CONDITIONAL ! -1 CONDITIONAL? ! ;
: NC 2 CONDITIONAL ! -1 CONDITIONAL? ! ;
: CS 3 CONDITIONAL ! -1 CONDITIONAL? ! ;
: PO 4 CONDITIONAL ! -1 CONDITIONAL? ! ;
: PE 5 CONDITIONAL ! -1 CONDITIONAL? ! ;
: P  6 CONDITIONAL ! -1 CONDITIONAL? ! ;
: M  7 CONDITIONAL ! -1 CONDITIONAL? ! ;


1 CONSTANT Z   2 CONSTANT NC  3 CONSTANT CS
4 CONSTANT PO    5 CONSTANT PE  6 CONSTANT P   7 CONSTANT M

: 8*     DUP + DUP + DUP + ;

: 1MI   CREATE  C, DOES> C@ C, RESETCC ;
: 2MI   CREATE  C, DOES> C@ + C, RESETCC ;
: 3MI   CREATE  C, DOES> C@ SWAP 8* + C, RESETCC ;
: 4MI   CREATE  C, DOES> C@ C, C, RESETCC ;
: 5MI   CREATE  C, DOES> C@ C, , RESETCC ;




( fig-FORTH 8080 Assembler with Z80 extensions       SCR 3 of 5)
00 1MI NOP,    76 1MI HALT,    F3 1MI DI,      FB 1MI EI,
07 1MI RLCA,   0F 1MI RRCA,    17 1MI RLA,     1F 1MI RRA,
E9 1MI JPHL,   F9 1MI LDSPHL,  E3 1MI EXSPHL,  EB 1MI EXDEHL
27 1MI DAA,    2F 1MI CPL,     37 1MI SCF,     3F 1MI CCF,
08 1MI EXAF,   D9 1MI EXX,

80 2MI ADD,    88 2MI ADC,     90 2MI SUB,     98 2MI SBB,
A0 2MI AND,    A8 2MI XOR,     B0 2MI OR,      B8 2MI CP,

09 3MI ADD.HL, C1 3MI POP,     C5 3MI PUSH,    02 3MI STAX,
0A 3MI LDAX,   04 3MI INC,     05 3MI DEC,     03 3MI INC.X,
0B 3MI DEC.X,  C7 3MI RST,

( fig-FORTH 8080 Assembler with Z80 extensions       SCR 4 of 5)
D3 4MI OUT,    DB 4MI IN,      C6 4MI ADD#,    CE 4MI ADC#,
D6 4MI SUB#,   DE 4MI SBC#,    E6 4MI AND#,    EE 4MI XOR#,
F6 4MI OR#,    FE 4MI CP#,

22 5MI SHLD,   2A 5MI LHLD,    32 5MI STA,     3A 5MI LDA,







( fig-FORTH 8080 Assembler with Z80 extensions       SCR 5 of 6)
: NOT,   8 + ;
: MOV,   8* 40 + + C, ;
: MVI,   8* 6 + C, C, ;
: LXI,   8* 1+ C, , ;
: PCIX,  DD C, E9 C,  ;
: PCIY,  FD C, E9 C, ;

: NOTCC ( cc -- cc' )  CONDITION @ 1 XOR CONDITIONAL ! ;
: JPNOTCC    CONDITIONAL? IF CONDITION @ NOTCC 8* C2 +
   ELSE C3 THEN RESETCC ;
: CALL,  CONDITIONAL? IF CONDITION @ 8* C4 +
   ELSE CD THEN   C, ,  RESETCC ;
: JP,    CONDITIONAL? IF CONDITION @ 8* C2 +
   ELSE C3 THEN   C, ,  RESETCC ;
: JR,    CONDITIONAL? IF CONDITION @ 3 AND 8* 20 +
   ELSE 18 THEN   C, C,  RESETCC ;
: RET,   CONDITIONAL? IF CONDITION @ 8* C0 +
   ELSE C9 THEN   C, ,  RESETCC ;





( fig-FORTH 8080 Assembler with Z80 extensions       SCR 6 of 6)

: ?PAIRS  <> -22 THROW ;
: ENDIF,   2 ?PAIRS HERE SWAP ! ;
: THEN,    POSTPONE ENDIF, ;
: IF,      JPNOTCC C, HERE 0 , 2 ;
: ELSE,    2 ?PAIRS IF, ROT SWAP ENDIF, 2 ;
: BEGIN,   HERE 1 ;
: UNTIL,   1 ?PAIRS JPNOTCC C, , ;
: AGAIN,   1 ?PAIRS C3 C, , ;
: WHILE,   IF, 2+ ;
: REPEAT,  >R >R AGAIN, R> R> 2- ENDIF, ;
FORTH DEFINITIONS DECIMAL
